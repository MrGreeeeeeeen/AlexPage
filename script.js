document.addEventListener('DOMContentLoaded', function () {
    const modal = document.getElementById('modal');
    const label = document.createElement('div');
    const modalContent = modal.querySelector('.modal-content');

    // –°–æ–∑–¥–∞–µ–º –∏ —Å—Ç–∏–ª–∏–∑—É–µ–º —è—Ä–ª—ã–∫
    label.id = 'serviceLabel';
    label.textContent = '–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é';
    document.body.appendChild(label);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –∫ —è—Ä–ª—ã–∫—É –∏ –º–æ–¥–∞–ª—å–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
    animateGradient(label);
    animateGradient(modalContent);

    // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    // –£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞
    modalContent.innerHTML = `
        <span class="close">√ó</span>
        <h2>–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</h2>
        <form class="consultation-form">
            <input type="text" placeholder="–í–∞—à–µ –∏–º—è" required>
            <input type="email" placeholder="–í–∞—à email" required>
            <textarea placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" required></textarea>
            <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </form>
        <div class="social-links">
            <a href="#" class="social-icon"><i class="fab fa-telegram-plane"></i></a>
            <a href="#" class="social-icon"><i class="fab fa-whatsapp"></i></a>
            <a href="#" class="social-icon"><i class="fas fa-phone"></i></a>
        </div>
    `;


    // –£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞
    modalContent.style.borderRadius = '50%';
    modalContent.style.width = '350px';
    modalContent.style.height = '350px';
    modalContent.style.display = 'flex';
    modalContent.style.flexDirection = 'column';
    modalContent.style.justifyContent = 'center';
    modalContent.style.alignItems = 'center';
    modalContent.style.boxSizing = 'border-box';
    modalContent.style.alignItems = 'center';
    modalContent.style.boxSizing = 'border-box';
    modalContent.style.overflow = 'hidden';

    const closeBtn = modal.querySelector('.close');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–∫—Ä—ã—Ç–∏—è label
    function hideLabel() {
        label.style.transition = 'transform 0.5s ease-out';
        label.style.transform = 'translateX(-100%)';
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–∫–∞–∑–∞ label
    function showLabel() {
        label.style.transition = 'transform 0.5s ease-in';
        label.style.transform = 'translateX(0)';
    }
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    label.onclick = function() {
        modal.style.display = "flex";
        modal.style.justifyContent = "center";
        modal.style.alignItems = "center";
        hideLabel();
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.onclick = function() {
        modal.style.display = "none";
        showLabel();
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
            showLabel();
        }
    }


    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    const form = modal.querySelector('.consultation-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        const name = form.querySelector('input[type="text"]').value.trim();
        const email = form.querySelector('input[type="email"]').value.trim();
        const message = form.querySelector('textarea').value.trim();

        if (!name || !email || !message) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        if (!/^[\w.-]+@[a-zA-Z\d.-]+\.[a-zA-Z]{2,}$/.test(email)) {
            alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!');
            return;
        }

        // –¢–≤–æ–π —Ç–æ–∫–µ–Ω –∏ chat_id
        const TOKEN = "7698667445:AAEWssGLH1FgzBQaftgfI2o6QOS_gVlKtI8";
        const CHAT_ID = "85203644"; // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π CHAT_ID
        const TEXT = `üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n\nüë§ –ò–º—è: ${name}\nüìß Email: ${email}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram API
        fetch(`https://api.telegram.org/bot${TOKEN}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: TEXT,
                parse_mode: "Markdown"
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.ok) {
                alert('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
                form.reset();
                modal.style.display = "none";
            } else {
                alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ' + data.description);
            }
        })
        .catch(error => {
            alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ' + error.message);
            console.error('–û—à–∏–±–∫–∞:', error);
        });

    });
});

function animateGradient(element) {
    let hue = 0;

    function updateGradient() {
        hue = (hue + 0.3) % 360;
        const color1 = `hsla(${hue}, 60%, 60%, 0.9)`;
        const color2 = `hsla(${(hue + 120) % 360}, 60%, 60%, 0.9)`;
        const color3 = `hsla(${(hue + 240) % 360}, 60%, 60%, 0.9)`;

        element.style.background = `
            linear-gradient(45deg,
            ${color1}, 
            ${color2}, 
            ${color3})
        `;
        element.style.backgroundSize = '200% 200%';
        element.style.animation = 'gradientShift 5s ease infinite, colorfulShadow 10s infinite linear';

        requestAnimationFrame(updateGradient);
    }

    updateGradient();
}

